{"ast":null,"code":"import * as types from \"./actionTypes\";\nimport axios from \"axios\";\nconst API = \"http://localhost:5000\";\n\nconst getWorkers = workers => ({\n  type: types.GET_WORKERS,\n  payload: workers\n});\n\nexport const getWorker = workers => ({\n  type: types.GET_SINGLE_WORKER,\n  payload: workers\n});\n\nconst workerAdded = msg => ({\n  type: types.ADD_WORKER,\n  payload: msg\n});\n\nconst workerDelete = msg => ({\n  type: types.DELETE_WORKER,\n  payload: msg\n});\n\nconst workerUpdate = msg => ({\n  type: types.UPDATE_WORKER,\n  payload: msg\n});\n\nexport const loadWorkers = () => {\n  return function (dispatch) {\n    axios.get(`${API}/workers`).then(resp => dispatch(getWorkers(resp.data))).catch(err => console.log(err));\n  };\n};\nexport const loadProfile = () => {\n  return function (dispatch) {\n    axios.get(`${API}/workers/profile`).then(resp => dispatch(getWorkers(resp.data))).catch(err => console.log(err));\n  };\n};\nexport const addWorker = worker => {\n  return function (dispatch) {\n    axios.post(`${API}/workers`, worker).then(resp => {\n      dispatch(workerAdded(resp.data.msg));\n      dispatch(loadWorkers());\n    }).catch(err => console.log(err));\n  };\n};\nexport const deleteWorker = id => {\n  return function (dispatch) {\n    axios.delete(`${API}/workers/${id}`).then(resp => {\n      dispatch(workerDelete(resp.data.msg));\n      dispatch(loadWorkers());\n    }).catch(err => console.log(err));\n  };\n};\nexport const loadSingleWorker = id => {\n  return function (dispatch) {\n    axios.get(`${API}/workers/${id}`).then(resp => {\n      dispatch(getWorker(resp.data));\n    }).catch(err => console.log(err));\n  };\n};\nexport const updateWorker = (user, id) => {\n  return function (dispatch) {\n    axios.put(`${API}/workers/${id}`, user).then(resp => {\n      dispatch(workerUpdate(resp.data.msg));\n      dispatch(loadWorkers());\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["C:/Users/ahmad/Desktop/Study/4/final project/masterway/src/redux/workers/actions.js"],"names":["types","axios","API","getWorkers","workers","type","GET_WORKERS","payload","getWorker","GET_SINGLE_WORKER","workerAdded","msg","ADD_WORKER","workerDelete","DELETE_WORKER","workerUpdate","UPDATE_WORKER","loadWorkers","dispatch","get","then","resp","data","catch","err","console","log","loadProfile","addWorker","worker","post","deleteWorker","id","delete","loadSingleWorker","updateWorker","user","put"],"mappings":"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","sourcesContent":["import * as types from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst API = \"http://localhost:5000\";\r\n\r\nconst getWorkers = (workers) => ({\r\n  type: types.GET_WORKERS,\r\n  payload: workers,\r\n});\r\n\r\nexport const getWorker = (workers) => ({\r\n  type: types.GET_SINGLE_WORKER,\r\n  payload: workers,\r\n});\r\n\r\nconst workerAdded = (msg) => ({\r\n  type: types.ADD_WORKER,\r\n  payload: msg,\r\n});\r\n\r\nconst workerDelete = (msg) => ({\r\n  type: types.DELETE_WORKER,\r\n  payload: msg,\r\n});\r\n\r\nconst workerUpdate = (msg) => ({\r\n  type: types.UPDATE_WORKER,\r\n  payload: msg,\r\n});\r\n\r\nexport const loadWorkers = () => {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(`${API}/workers`)\r\n      .then((resp) => dispatch(getWorkers(resp.data)))\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const loadProfile = () => {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(`${API}/workers/profile`)\r\n      .then((resp) => dispatch(getWorkers(resp.data)))\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\n\r\nexport const addWorker = (worker) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .post(`${API}/workers`, worker)\r\n      .then((resp) => {\r\n        dispatch(workerAdded(resp.data.msg));\r\n        dispatch(loadWorkers());\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\n\r\nexport const deleteWorker = (id) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .delete(`${API}/workers/${id}`)\r\n      .then((resp) => {\r\n        dispatch(workerDelete(resp.data.msg));\r\n        dispatch(loadWorkers());\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const loadSingleWorker = (id) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(`${API}/workers/${id}`)\r\n      .then((resp) => {\r\n        dispatch(getWorker(resp.data));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const updateWorker = (user, id) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .put(`${API}/workers/${id}`, user)\r\n      .then((resp) => {\r\n        dispatch(workerUpdate(resp.data.msg));\r\n        dispatch(loadWorkers());\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}