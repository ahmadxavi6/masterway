{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmad\\\\Desktop\\\\Study\\\\4\\\\final project\\\\masterway\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport App from \"../App\";\nimport Forgetmypass from \"./Forgetmypass\";\nimport logo from \"../components/logo 2.png\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API = \"http://localhost:5000\";\n\nasync function loginUser(email, password) {\n  const user = {\n    email,\n    password\n  }; // send the username and password to the server\n\n  await axios.post(`${API}/admins`, user).then(data => {\n    return data.data.token;\n  }).catch(err => console.log(\"error\"));\n}\n\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  setToken(\"\");\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const loggedInUser = sessionStorage.getItem(\"user\");\n\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser);\n    }\n  }, []);\n\n  const rest = () => {\n    document.getElementById(\"email\").value = \"\";\n    document.getElementById(\"password\").value = \"\";\n    alert(\"Wrong email or Wrong passwod\");\n  }; // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   const user = { fName, email, password };\n  //   // send the username and password to the server\n  //   await axios\n  //     .post(`${API}/admins`, user)\n  //     .then((resp) => {\n  //       setUser(resp.data);\n  //       setfName(resp.data.fName);\n  //       // store the user in localStorage\n  //       sessionStorage.setItem(\"user\", JSON.stringify(resp.data));\n  //       console.log(resp.data);\n  //       const loggedInUser = sessionStorage.getItem(\"user\");\n  //       console.log(loggedInUser);\n  //     })\n  //     .catch((err) => rest());\n  // };\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser(email, password);\n    setToken(token);\n    console.log(token);\n  }; // if there's a user show the message below\n\n\n  if (user) {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forgetmypass\",\n          exact: true,\n          component: Forgetmypass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 offset-md-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card my-5\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"card-body cardbody-color p-lg-5\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: logo,\n                  className: \"img-fluid profile-image-pic img-thumbnail rounded-circle my-3\",\n                  width: \"200px\",\n                  alt: \"profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  id: \"email\",\n                  \"aria-describedby\": \"emailHelp\",\n                  placeholder: \"Email\",\n                  onChange: _ref2 => {\n                    let {\n                      target\n                    } = _ref2;\n                    return setEmail(target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"password\",\n                  placeholder: \"password\",\n                  onChange: _ref3 => {\n                    let {\n                      target\n                    } = _ref3;\n                    return setPassword(target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-color px-5 mb-5 w-100\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"emailHelp\",\n                className: \"form-text text-center mb-5 text-dark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"lcoB+GH40PsI31O47OM+9tUU9UU=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/ahmad/Desktop/Study/4/final project/masterway/src/pages/Login.js"],"names":["React","useState","useEffect","Link","Button","axios","PropTypes","BrowserRouter","Router","Switch","Route","App","Forgetmypass","logo","API","loginUser","email","password","user","post","then","data","token","catch","err","console","log","Login","setToken","setEmail","setPassword","setUser","loggedInUser","sessionStorage","getItem","foundUser","JSON","parse","rest","document","getElementById","value","alert","handleSubmit","e","preventDefault","target","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport Forgetmypass from \"./Forgetmypass\";\r\nimport logo from \"../components/logo 2.png\";\r\nimport \"./login.css\";\r\nconst API = \"http://localhost:5000\";\r\n\r\nasync function loginUser(email, password) {\r\n  const user = { email, password };\r\n\r\n  // send the username and password to the server\r\n  await axios\r\n    .post(`${API}/admins`, user)\r\n    .then((data) => {\r\n      return data.data.token;\r\n    })\r\n    .catch((err) => console.log(\"error\"));\r\n}\r\nexport default function Login({ setToken }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  setToken(\"\");\r\n\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = sessionStorage.getItem(\"user\");\r\n    if (loggedInUser) {\r\n      const foundUser = JSON.parse(loggedInUser);\r\n      setUser(foundUser);\r\n    }\r\n  }, []);\r\n  const rest = () => {\r\n    document.getElementById(\"email\").value = \"\";\r\n    document.getElementById(\"password\").value = \"\";\r\n    alert(\"Wrong email or Wrong passwod\");\r\n  };\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault();\r\n  //   const user = { fName, email, password };\r\n  //   // send the username and password to the server\r\n  //   await axios\r\n  //     .post(`${API}/admins`, user)\r\n  //     .then((resp) => {\r\n  //       setUser(resp.data);\r\n  //       setfName(resp.data.fName);\r\n  //       // store the user in localStorage\r\n  //       sessionStorage.setItem(\"user\", JSON.stringify(resp.data));\r\n  //       console.log(resp.data);\r\n  //       const loggedInUser = sessionStorage.getItem(\"user\");\r\n  //       console.log(loggedInUser);\r\n  //     })\r\n  //     .catch((err) => rest());\r\n  // };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = await loginUser(email, password);\r\n    setToken(token);\r\n    console.log(token);\r\n  };\r\n\r\n  // if there's a user show the message below\r\n  if (user) {\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/forgetmypass\" exact component={Forgetmypass}></Route>\r\n        </Switch>\r\n      </Router>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <div className=\"card my-5\">\r\n              <form\r\n                className=\"card-body cardbody-color p-lg-5\"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <div className=\"text-center\">\r\n                  <img\r\n                    src={logo}\r\n                    className=\"img-fluid profile-image-pic img-thumbnail rounded-circle my-3\"\r\n                    width=\"200px\"\r\n                    alt=\"profile\"\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    placeholder=\"Email\"\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                    placeholder=\"password\"\r\n                    onChange={({ target }) => setPassword(target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-color px-5 mb-5 w-100\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </div>\r\n                <div\r\n                  id=\"emailHelp\"\r\n                  className=\"form-text text-center mb-5 text-dark\"\r\n                ></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}