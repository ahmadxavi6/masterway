{"ast":null,"code":"import * as types from './actionTypes';\nconst initialState = {\n  workers: [],\n  worker: {},\n  msg: \"\"\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.GET_WORKERS:\n      return { ...state,\n        workers: action.payload\n      };\n\n    case types.ADD_WORKER:\n      return { ...state,\n        msg: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/ahmad/Desktop/Study/4/final project/masterway/src/redux/reducer.js"],"names":["types","initialState","workers","worker","msg","userReducer","state","action","type","GET_WORKERS","payload","ADD_WORKER"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG,EADO;AAEjBC,EAAAA,MAAM,EAAG,EAFQ;AAGjBC,EAAAA,GAAG,EAAG;AAHW,CAArB;;AAKA,MAAMC,WAAW,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBL,YAAuB;AAAA,MAAVM,MAAU;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAMR,KAAK,CAACS,WAAZ;AACI,aAAM,EACF,GAAGH,KADD;AAEFJ,QAAAA,OAAO,EAAGK,MAAM,CAACG;AAFf,OAAN;;AAIJ,SAAKV,KAAK,CAACW,UAAX;AACI,aAAM,EACL,GAAGL,KADE;AAELF,QAAAA,GAAG,EAACG,MAAM,CAACG;AAFN,OAAN;;AAIJ;AACI,aAAOJ,KAAP;AAZR;AAeH,CAhBD;;AAiBA,eAAeD,WAAf","sourcesContent":["import * as types from './actionTypes';\r\n\r\n\r\nconst initialState = {\r\n    workers : [],\r\n    worker : {},\r\n    msg : \"\"\r\n}\r\nconst userReducer = (state = initialState,action) =>{\r\n    switch (action.type) {\r\n        case  types.GET_WORKERS:\r\n            return{\r\n                ...state,\r\n                workers : action.payload,\r\n            };\r\n        case types.ADD_WORKER:\r\n            return{\r\n             ...state,\r\n             msg:action.payload\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}