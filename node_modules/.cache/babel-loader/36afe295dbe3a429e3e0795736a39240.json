{"ast":null,"code":"import * as types from \"./actionTypes\";\nimport axios from \"axios\";\nconst API = \"http://localhost:5000\";\n\nconst getWorkers = wrokers => ({\n  type: types.GET_WORKERS,\n  payload: users\n});\n\nconst getUser = users => ({\n  type: types.GET_SINGLE_USER,\n  payload: users\n});\n\nconst userAdded = msg => ({\n  type: types.ADD_USER,\n  payload: msg\n});\n\nconst userDelete = msg => ({\n  type: types.DELETE_USER,\n  payload: msg\n});\n\nconst userUpdate = msg => ({\n  type: types.UPDATE_USER,\n  payload: msg\n});\n\nexport const loadUsers = () => {\n  return function (dispatch) {\n    axios.get(`${API}/users`).then(resp => dispatch(getUsers(resp.data))).catch(err => console.log(err));\n  };\n};\nexport const addUser = user => {\n  return function (dispatch) {\n    axios.post(`${API}/users`, user).then(resp => {\n      dispatch(userAdded(resp.data.msg));\n      dispatch(loadUsers());\n    }).catch(err => console.log(err));\n  };\n};\nexport const deleteUser = id => {\n  return function (dispatch) {\n    axios.delete(`${API}/users/${id}`).then(resp => {\n      dispatch(userDelete(resp.data.msg));\n      dispatch(loadUsers());\n    }).catch(err => console.log(err));\n  };\n};\nexport const loadSingleUser = id => {\n  return function (dispatch) {\n    axios.get(`${API}/user/${id}`).then(resp => {\n      dispatch(getUser(resp.data));\n    }).catch(err => console.log(err));\n  };\n};\nexport const updateUser = (user, id) => {\n  return function (dispatch) {\n    axios.put(`${API}/users/${id}`, user).then(resp => {\n      dispatch(userUpdate(resp.data.msg));\n      dispatch(loadUsers());\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["C:/Users/ahmad/Desktop/Study/4/final project/masterway/src/redux/actions.js"],"names":["types","axios","API","getWorkers","wrokers","type","GET_WORKERS","payload","users","getUser","GET_SINGLE_USER","userAdded","msg","ADD_USER","userDelete","DELETE_USER","userUpdate","UPDATE_USER","loadUsers","dispatch","get","then","resp","getUsers","data","catch","err","console","log","addUser","user","post","deleteUser","id","delete","loadSingleUser","updateUser","put"],"mappings":"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","sourcesContent":["import * as types from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst API = \"http://localhost:5000\";\r\n\r\nconst getWorkers = (wrokers) => ({\r\n  type: types.GET_WORKERS,\r\n  payload: users,\r\n});\r\n\r\nconst getUser = (users) => ({\r\n  type: types.GET_SINGLE_USER,\r\n  payload: users,\r\n});\r\n\r\nconst userAdded = (msg) => ({\r\n  type: types.ADD_USER,\r\n  payload: msg,\r\n});\r\n\r\nconst userDelete = (msg) => ({\r\n  type: types.DELETE_USER,\r\n  payload: msg,\r\n});\r\n\r\nconst userUpdate = (msg) => ({\r\n  type: types.UPDATE_USER,\r\n  payload: msg,\r\n});\r\n\r\nexport const loadUsers = () => {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(`${API}/users`)\r\n      .then((resp) => dispatch(getUsers(resp.data)))\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const addUser = (user) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .post(`${API}/users`, user)\r\n      .then((resp) => {\r\n        dispatch(userAdded(resp.data.msg));\r\n        dispatch(loadUsers());\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const deleteUser = (id) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .delete(`${API}/users/${id}`)\r\n      .then((resp) => {\r\n        dispatch(userDelete(resp.data.msg));\r\n        dispatch(loadUsers());\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const loadSingleUser = (id) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(`${API}/user/${id}`)\r\n      .then((resp) => {\r\n        dispatch(getUser(resp.data));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const updateUser = (user, id) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .put(`${API}/users/${id}`, user)\r\n      .then((resp) => {\r\n        dispatch(userUpdate(resp.data.msg));\r\n        dispatch(loadUsers());\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}