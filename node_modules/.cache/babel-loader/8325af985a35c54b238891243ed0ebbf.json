{"ast":null,"code":"import * as types from \"./actionTypes\";\nimport axios from \"axios\";\nconst API = \"http://localhost:5000\";\n\nconst getWorkers = workers => ({\n  type: types.GET_WORKERS,\n  payload: workers\n});\n\nconst getWorker = Workers => ({\n  type: types.GET_SINGLE_WORKER,\n  payload: workers\n});\n\nconst workerAdded = msg => ({\n  type: types.ADD_WORKER,\n  payload: msg\n});\n\nconst workerDelete = msg => ({\n  type: types.DELETE_WORKER,\n  payload: msg\n});\n\nconst workerUpdate = msg => ({\n  type: types.UPDATE_WORKER,\n  payload: msg\n});\n\nexport const loadWorkers = () => {\n  return function (dispatch) {\n    axios.get(`${API}/workers`).then(resp => dispatch(getUsers(resp.data))).catch(err => console.log(err));\n  };\n};\nexport const addWroker = worker => {\n  return function (dispatch) {\n    axios.post(`${API}/wrokers`, worker).then(resp => {\n      dispatch(workerAdded(resp.data.msg));\n      dispatch(loadUsers());\n    }).catch(err => console.log(err));\n  };\n};\nexport const deleteUser = id => {\n  return function (dispatch) {\n    axios.delete(`${API}/users/${id}`).then(resp => {\n      dispatch(userDelete(resp.data.msg));\n      dispatch(loadUsers());\n    }).catch(err => console.log(err));\n  };\n};\nexport const loadSingleUser = id => {\n  return function (dispatch) {\n    axios.get(`${API}/user/${id}`).then(resp => {\n      dispatch(getUser(resp.data));\n    }).catch(err => console.log(err));\n  };\n};\nexport const updateUser = (user, id) => {\n  return function (dispatch) {\n    axios.put(`${API}/users/${id}`, user).then(resp => {\n      dispatch(userUpdate(resp.data.msg));\n      dispatch(loadUsers());\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["C:/Users/ahmad/Desktop/Study/4/final project/masterway/src/redux/actions.js"],"names":["types","axios","API","getWorkers","workers","type","GET_WORKERS","payload","getWorker","Workers","GET_SINGLE_WORKER","workerAdded","msg","ADD_WORKER","workerDelete","DELETE_WORKER","workerUpdate","UPDATE_WORKER","loadWorkers","dispatch","get","then","resp","getUsers","data","catch","err","console","log","addWroker","worker","post","loadUsers","deleteUser","id","delete","userDelete","loadSingleUser","getUser","updateUser","user","put","userUpdate"],"mappings":"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","sourcesContent":["import * as types from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst API = \"http://localhost:5000\";\r\n\r\nconst getWorkers = (workers) => ({\r\n  type: types.GET_WORKERS,\r\n  payload: workers,\r\n});\r\n\r\nconst getWorker = (Workers) => ({\r\n  type: types.GET_SINGLE_WORKER,\r\n  payload: workers,\r\n});\r\n\r\nconst workerAdded = (msg) => ({\r\n  type: types.ADD_WORKER,\r\n  payload: msg,\r\n});\r\n\r\nconst workerDelete = (msg) => ({\r\n  type: types.DELETE_WORKER,\r\n  payload: msg,\r\n});\r\n\r\nconst workerUpdate = (msg) => ({\r\n  type: types.UPDATE_WORKER,\r\n  payload: msg,\r\n});\r\n\r\nexport const loadWorkers = () => {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(`${API}/workers`)\r\n      .then((resp) => dispatch(getUsers(resp.data)))\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const addWroker = (worker) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .post(`${API}/wrokers`, worker)\r\n      .then((resp) => {\r\n        dispatch(workerAdded(resp.data.msg));\r\n        dispatch(loadUsers());\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const deleteUser = (id) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .delete(`${API}/users/${id}`)\r\n      .then((resp) => {\r\n        dispatch(userDelete(resp.data.msg));\r\n        dispatch(loadUsers());\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const loadSingleUser = (id) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(`${API}/user/${id}`)\r\n      .then((resp) => {\r\n        dispatch(getUser(resp.data));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const updateUser = (user, id) => {\r\n  return function (dispatch) {\r\n    axios\r\n      .put(`${API}/users/${id}`, user)\r\n      .then((resp) => {\r\n        dispatch(userUpdate(resp.data.msg));\r\n        dispatch(loadUsers());\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}