{"ast":null,"code":"import * as types from \"./actionTypes\";\nconst initialState = {\n  workers: [],\n  worker: {},\n  msg: \"\"\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.GET_WORKERS:\n      return { ...state,\n        workers: action.payload\n      };\n\n    case types.ADD_WORKER:\n    case types.DELETE_WORKER:\n    case types.UPDATE_WORKER:\n      return { ...state,\n        msg: action.payload\n      };\n\n    case types.GET_SINGLE_WORKER:\n      return { ...state,\n        worker: action.payload\n      };\n\n    case types.LOAD_PROFILE:\n      return { ...state,\n        worker: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/ahmad/Desktop/Study/4/final project/masterway/src/redux/workers/reducer.js"],"names":["types","initialState","workers","worker","msg","userReducer","state","action","type","GET_WORKERS","payload","ADD_WORKER","DELETE_WORKER","UPDATE_WORKER","GET_SINGLE_WORKER","LOAD_PROFILE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,GAAG,EAAE;AAHc,CAArB;;AAMA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACS,WAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,OAAO,EAAEK,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAKV,KAAK,CAACW,UAAX;AACA,SAAKX,KAAK,CAACY,aAAX;AACA,SAAKZ,KAAK,CAACa,aAAX;AACE,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,GAAG,EAAEG,MAAM,CAACG;AAFP,OAAP;;AAIF,SAAKV,KAAK,CAACc,iBAAX;AACE,aAAO,EACL,GAAGR,KADE;AAELH,QAAAA,MAAM,EAAEI,MAAM,CAACG;AAFV,OAAP;;AAKF,SAAKV,KAAK,CAACe,YAAX;AACE,aAAM,EACJ,GAAGT,KADC;AAEJH,QAAAA,MAAM,EAACI,MAAM,CAACG;AAFV,OAAN;;AAKF;AACE,aAAOJ,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,WAAf","sourcesContent":["import * as types from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  workers: [],\r\n  worker: {},\r\n  msg: \"\",\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_WORKERS:\r\n      return {\r\n        ...state,\r\n        workers: action.payload,\r\n      };\r\n    case types.ADD_WORKER:\r\n    case types.DELETE_WORKER:\r\n    case types.UPDATE_WORKER:\r\n      return {\r\n        ...state,\r\n        msg: action.payload,\r\n      };\r\n    case types.GET_SINGLE_WORKER:\r\n      return {\r\n        ...state,\r\n        worker: action.payload,\r\n      };\r\n\r\n    case types.LOAD_PROFILE:\r\n      return{\r\n        ...state, \r\n        worker:action.payload\r\n\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n"]},"metadata":{},"sourceType":"module"}