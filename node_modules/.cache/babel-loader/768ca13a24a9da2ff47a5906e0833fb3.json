{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmad\\\\Desktop\\\\Study\\\\4\\\\final project\\\\masterway\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = \"http://localhost:5000\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [fName, setfName] = useState(\"\");\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser.token);\n    }\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      fName,\n      email,\n      password\n    }; // send the username and password to the server\n\n    const response = await axios.post(`${API}/admins`, user); // set the state of the user\n\n    if (response.status === 200) {\n      setUser(response.data);\n      setfName(response.data.fName); // store the user in localStorage\n\n      localStorage.setItem(\"user\", response.data);\n      console.log(response.data.token);\n    }\n  }; // if there's a user show the message below\n\n\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [fName, \" is loggged in\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  } // if there's no user, show the login form\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      placeholder: \"enter a Email\",\n      onChange: _ref => {\n        let {\n          target\n        } = _ref;\n        return setEmail(target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        placeholder: \"enter a password\",\n        onChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"aSgAI8139csVsMIGewuf754LWb4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/ahmad/Desktop/Study/4/final project/masterway/src/pages/Login.js"],"names":["React","useState","useEffect","axios","API","Login","email","setEmail","password","setPassword","fName","setfName","user","setUser","loggedInUser","localStorage","getItem","foundUser","JSON","parse","token","handleSubmit","e","preventDefault","response","post","status","data","setItem","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nconst API = \"http://localhost:5000\";\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [fName, setfName] = useState(\"\");\r\n  const [user, setUser] = useState();\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem(\"user\");\r\n    if (loggedInUser) {\r\n      const foundUser = JSON.parse(loggedInUser);\r\n      setUser(foundUser.token);\r\n    }\r\n  }, []);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const user = { fName, email, password };\r\n    // send the username and password to the server\r\n    const response = await axios.post(`${API}/admins`, user);\r\n    // set the state of the user\r\n    if (response.status === 200) {\r\n      setUser(response.data);\r\n      setfName(response.data.fName);\r\n      // store the user in localStorage\r\n      localStorage.setItem(\"user\", response.data);\r\n      console.log(response.data.token);\r\n    }\r\n  };\r\n\r\n  // if there's a user show the message below\r\n  if (user) {\r\n    return <div>{fName} is loggged in</div>;\r\n  }\r\n\r\n  // if there's no user, show the login form\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"email\">Email: </label>\r\n      <input\r\n        type=\"email\"\r\n        value={email}\r\n        placeholder=\"enter a Email\"\r\n        onChange={({ target }) => setEmail(target.value)}\r\n      />\r\n      <div>\r\n        <label htmlFor=\"password\">password: </label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          placeholder=\"enter a password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}