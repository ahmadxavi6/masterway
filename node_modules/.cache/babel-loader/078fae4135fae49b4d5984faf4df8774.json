{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmad\\\\Desktop\\\\Study\\\\4\\\\final project\\\\masterway\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport logo from \"../components/logo 2.png\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API = \"http://localhost:5000\";\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [fName, setfName] = useState(\"\");\n  const [user, setUser] = useState();\n\n  const handleclick = () => {\n    console.log(\"gi\");\n  };\n\n  useEffect(() => {\n    const loggedInUser = sessionStorage.getItem(\"user\");\n\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser);\n      setfName(foundUser.fName);\n      setToken(foundUser.token);\n    }\n  }, [setToken]);\n\n  const rest = () => {\n    document.getElementById(\"email\").value = \"\";\n    document.getElementById(\"password\").value = \"\";\n    alert(\"Wrong email or Wrong password\");\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      fName,\n      email,\n      password\n    }; // send the username and password to the server\n\n    await axios.post(`${API}/admins`, user).then(resp => {\n      setUser(resp.data);\n      setfName(resp.data.fName);\n      setToken(resp.data.token); // store the user in localStorage\n\n      sessionStorage.setItem(\"user\", JSON.stringify(resp.data));\n      console.log(resp.data);\n      const loggedInUser = sessionStorage.getItem(\"user\");\n      console.log(loggedInUser);\n    }).catch(err => rest());\n  }; // if there's a user show the message below\n\n\n  if (user) {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 offset-md-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card my-5\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"card-body cardbody-color p-lg-5\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: logo,\n                  className: \"img-fluid profile-image-pic img-thumbnail rounded-circle my-3\",\n                  width: \"200px\",\n                  alt: \"profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  id: \"email\",\n                  \"aria-describedby\": \"emailHelp\",\n                  placeholder: \"Email\",\n                  onChange: _ref2 => {\n                    let {\n                      target\n                    } = _ref2;\n                    return setEmail(target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"password\",\n                  placeholder: \"password\",\n                  onChange: _ref3 => {\n                    let {\n                      target\n                    } = _ref3;\n                    return setPassword(target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-color px-5 mb-5 w-100\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"emailHelp\",\n                className: \"form-text text-center mb-5 text-dark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleclick,\n                variant: \"info\",\n                style: {\n                  marginLeft: \"5px\",\n                  position: \"center\"\n                },\n                children: \"Forget My Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"aSgAI8139csVsMIGewuf754LWb4=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/ahmad/Desktop/Study/4/final project/masterway/src/pages/Login.js"],"names":["React","useState","useEffect","Button","axios","PropTypes","logo","API","Login","setToken","email","setEmail","password","setPassword","fName","setfName","user","setUser","handleclick","console","log","loggedInUser","sessionStorage","getItem","foundUser","JSON","parse","token","rest","document","getElementById","value","alert","handleSubmit","e","preventDefault","post","then","resp","data","setItem","stringify","catch","err","target","marginLeft","position","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport logo from \"../components/logo 2.png\";\r\nimport \"./login.css\";\r\nconst API = \"http://localhost:5000\";\r\n\r\nexport default function Login({ setToken }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [fName, setfName] = useState(\"\");\r\n  const [user, setUser] = useState();\r\n  const handleclick = () => {\r\n    console.log(\"gi\");\r\n  };\r\n  useEffect(() => {\r\n    const loggedInUser = sessionStorage.getItem(\"user\");\r\n    if (loggedInUser) {\r\n      const foundUser = JSON.parse(loggedInUser);\r\n      setUser(foundUser);\r\n      setfName(foundUser.fName);\r\n      setToken(foundUser.token);\r\n    }\r\n  }, [setToken]);\r\n  const rest = () => {\r\n    document.getElementById(\"email\").value = \"\";\r\n    document.getElementById(\"password\").value = \"\";\r\n    alert(\"Wrong email or Wrong password\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const user = { fName, email, password };\r\n    // send the username and password to the server\r\n    await axios\r\n      .post(`${API}/admins`, user)\r\n      .then((resp) => {\r\n        setUser(resp.data);\r\n        setfName(resp.data.fName);\r\n        setToken(resp.data.token);\r\n        // store the user in localStorage\r\n        sessionStorage.setItem(\"user\", JSON.stringify(resp.data));\r\n        console.log(resp.data);\r\n        const loggedInUser = sessionStorage.getItem(\"user\");\r\n        console.log(loggedInUser);\r\n      })\r\n      .catch((err) => rest());\r\n  };\r\n\r\n  // if there's a user show the message below\r\n  if (user) {\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <div className=\"card my-5\">\r\n              <form\r\n                className=\"card-body cardbody-color p-lg-5\"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <div className=\"text-center\">\r\n                  <img\r\n                    src={logo}\r\n                    className=\"img-fluid profile-image-pic img-thumbnail rounded-circle my-3\"\r\n                    width=\"200px\"\r\n                    alt=\"profile\"\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    placeholder=\"Email\"\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                    placeholder=\"password\"\r\n                    onChange={({ target }) => setPassword(target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-color px-5 mb-5 w-100\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </div>\r\n                <div\r\n                  id=\"emailHelp\"\r\n                  className=\"form-text text-center mb-5 text-dark\"\r\n                ></div>\r\n\r\n                <Button\r\n                  onClick={handleclick}\r\n                  variant=\"info\"\r\n                  style={{ marginLeft: \"5px\", position: \"center\" }}\r\n                >\r\n                  Forget My Password\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}